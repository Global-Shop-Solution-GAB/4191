Program.Sub.Preflight.Start

Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.SetErrorHandler("Main_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)


'F.Intrinsic.Debug.InvokeDebugger
'
'F.Intrinsic.Debug.Stop


'open connection
F.odbc.Connection!con.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass,72000)

f.Intrinsic.Control.If(v.Caller.Hook, =, 42400)
	f.Intrinsic.Control.CallSub(createfile)
f.Intrinsic.Control.EndIf 

'close connection to the database
F.ODBC.Connection!con.Close

'end the program
F.Intrinsic.Control.End

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Main_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4191_APARExport.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.Main.End

Program.Sub.CreateFile.Start
F.Intrinsic.Control.SetErrorHandler("CreateFile_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sBatchno.Declare(String)

'V.Local.sBatchno.Set("45648")

'loop through all the Batch Codes
F.Intrinsic.String.Build("select distinct Batch_num,APPL_TYPE from v_BI_COMB_JE_AUDIT where  Rptid = '000817' and trmnl = '{0}'",V.Caller.Terminal,V.Local.sSQL)
'For testing. using TRT Database
'f.Intrinsic.String.Build("select distinct Batch_num,APPL_TYPE from v_BI_COMB_JE_AUDIT where  Rptid = '000817' and trmnl = '{0}'","165",V.Local.sSQL)

F.ODBC.Connection!con.OpenRecordsetRO("rstB",V.local.ssql)
'check to see if eof is false
f.Intrinsic.Control.DoUntil(V.ODBC.con!rstB.EOF,=,True)
	F.Intrinsic.Control.If(v.ODBC.con!rstB.FieldVal!APPL_TYPE,=,"AR")
		f.Intrinsic.Control.CallSub(ExportAR,"Batch",v.ODBC.con!rstB.FieldVal!Batch_num)
	F.Intrinsic.Control.elseIf(v.ODBC.con!rstB.FieldVal!APPL_TYPE,=,"AP")
		f.Intrinsic.Control.CallSub(ExportAP,"Batch",v.ODBC.con!rstB.FieldVal!Batch_num)
	Function.Intrinsic.Control.ElseIf(v.ODBC.con!rstB.FieldVal!APPL_TYPE,=,"GL")
		F.Intrinsic.Control.CallSub(ExportGL, "Batch", V.ODBC.con!rstB.FieldVal!Batch_num)
	F.Intrinsic.Control.endIf
	'9/21/16 Dawn: Added a sleeper so files are not over written
	F.Intrinsic.UI.Sleep(2)
	f.ODBC.con!rstB.MoveNext 
F.Intrinsic.Control.Loop 
f.ODBC.con!rstB.Close


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("CreateFile_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4191_APARExport.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.CreateFile.End

Program.Sub.ExportAR.Start
F.Intrinsic.Control.SetErrorHandler("ExportAR_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sExportHdr.Declare(String)
V.Local.sExportDet.Declare(String)
V.Local.sBatchno.Declare(String)
V.Local.bexists.Declare(Boolean)
V.Local.sdate.Declare(String)
V.Local.sfilename.Declare(String)
V.Local.sfile.Declare(String)
V.Local.sfullpath.Declare(String)
V.Local.sdate1.Declare(String)
V.Local.sDocDate.Declare(String)
V.Local.sInvoiceNo.Declare(String)

V.Local.sCust.Declare(String)
V.Local.sDocNo.Declare(String)
V.Local.sPurAmt.Declare(String)
V.Local.sInvNo.Declare(String)
V.Local.sFrtAMT.Declare(String)
V.Local.sCurrAMT.Declare(String)
V.Local.sExchgCurr.Declare(String)
V.Local.sExchgRate.Declare(String)
V.Local.sGLAcctNo.Declare(String)
V.Local.sCost.Declare(String)
V.Local.sMiscAMT.Declare(String)
V.Local.sPaymentT.Declare(String)
V.Local.sSalesRep.Declare(String)
V.Local.sFacility.Declare(String)
V.Local.sPayType.Declare(String)
V.Local.sDocType.Declare(String)
V.Local.sDocText.Declare(String)

'	V.Local.sBatchno.Set("S0075")
	V.Local.sBatchno.Set(v.Args.Batch)

'	V.Local.sSQL.Set("select customer,invoice,batch_code,AMT_Invoice,Date_Invoice,Cost,Frt_Amt_CO_Curr,Terms_Code,Exchange_Curr,Exchange_Amt,Exchange_Rate,salesperson from AR_Open_Items")
	V.Local.sSQL.Set("select distinct customer,invoice,batch_code,Date_Invoice,Terms_Code,Exchange_Curr,Exchange_Rate,salesperson,GL_Account from v_AR_Open_Items ")
	f.Intrinsic.String.Build(" {0} where Batch_NUM = '{1}' order by batch_num,invoice,Date_Invoice",V.Local.sSQL,V.Local.sBatchno,V.Local.sSQL)
	F.ODBC.Connection!con.OpenRecordsetRO("rst",V.local.ssql)
	F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,False)
	
	'9/21/16 Dawn: Added additional for the Document Date: this is the oldest date for the invoice in the Batch
		Function.Intrinsic.String.Format(v.ODBC.con!rst.FieldVal!Date_Invoice ,"MM/DD/YYYY",V.Local.sDocDate)
		
		f.Intrinsic.Control.DoUntil(v.ODBC.con!rst.EOF,=,true)
			'process only Invoices are different
			f.Intrinsic.Control.If(V.Local.sInvoiceNo,<>,v.ODBC.con!rst.FieldValtrim!invoice)
				V.Local.sInvoiceNo.Set(v.ODBC.con!rst.FieldValtrim!invoice)
				Function.Intrinsic.String.Format(v.ODBC.con!rst.FieldVal!Date_Invoice ,"MM/DD/YYYY",V.Local.sdate)
				
				'calculate total 
				f.Intrinsic.String.Build("select sum(AMT_Invoice) as AMTINVOICE,sum(Cost) as COST,sum(Frt_Amt_CO_Curr) as FRT,sum(Exchange_Amt) as ExChgAmt from AR_Open_Items where batch_num = '{0}' and invoice = '{1}'",V.Local.sBatchno,v.ODBC.con!rst.FieldValtrim!invoice,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRO("rst1",V.local.ssql)
			
				f.Intrinsic.Control.If(v.ODBC.con!rst.FieldVal!batch_code,=,"10")
					V.Local.sDocType.Set("1")
				f.Intrinsic.Control.ElseIf(v.ODBC.con!rst.FieldVal!batch_code,=,"12")
					V.Local.sDocType.Set("2")
				f.Intrinsic.Control.EndIf 
			
				f.Intrinsic.String.Build("select Terms_Message from v_ar_terms where Terms_code = '{0}'",v.ODBC.con!rst.FieldValtrim!Terms_Code,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRO("rst2",V.local.ssql)
				F.Intrinsic.Control.If(V.ODBC.con!rst2.EOF,=,False)
'					V.Local.sPaymentT.Set(v.ODBC.con!rst2.FieldVal!Terms_message)
					f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,v.ODBC.con!rst2.FieldValtrim!Terms_message,V.Local.sPaymentT)
				f.Intrinsic.Control.EndIf 
				f.ODBC.con!rst2.Close
				
				f.Intrinsic.String.Build("select External_ID from v_CUST_FORM_INFO where customer = '{0}'",v.ODBC.con!rst.FieldValtrim!customer,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRO("rst3",V.local.ssql)
				F.Intrinsic.Control.If(V.ODBC.con!rst3.EOF,=,False)
					f.Intrinsic.String.Build("{0}CSA{1}{0}",v.Ambient.DblQuote,v.ODBC.con!rst3.FieldValtrim!External_id,V.Local.sCust)
				f.Intrinsic.Control.EndIf 
				f.ODBC.con!rst3.Close
				

				'Hdr
'				f.Intrinsic.String.Build("{0}CSA{1}{0}",v.Ambient.DblQuote,v.ODBC.con!rst.FieldValtrim!customer,V.Local.sCust)
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,v.ODBC.con!rst1.FieldValTrim!AMTINVOICE,V.Local.sPurAmt)
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,v.ODBC.con!rst.FieldValtrim!invoice,V.Local.sInvNo)
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,v.ODBC.con!rst1.FieldValTrim!FRT,V.Local.sFrtAMT)
				f.Intrinsic.String.Build("{0}0{0}",v.Ambient.DblQuote,V.Local.sMiscAMT)
				f.Intrinsic.String.Build("{0}1{0}",v.Ambient.DblQuote,V.Local.sExchgRate)
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,v.ODBC.con!rst1.FieldValTrim!ExChgAmt,V.Local.sCurrAMT)
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,v.ODBC.con!rst.FieldValTrim!Exchange_Curr,V.Local.sExchgCurr)
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,V.Local.sdate,V.Local.sdate)
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,V.Local.sDocDate,V.Local.sDocDate)
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,v.ODBC.con!rst1.FieldVal!Cost,V.Local.sCost)
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,"SUMMIT",V.Local.sFacility)
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,"CASH",V.Local.sPayType)
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,"Invoice Number Text",V.Local.sDocText)
								
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,v.ODBC.con!rst.FieldValTrim!salesperson,V.Local.sSalesRep)
				
				'Remove 1st char
				f.Intrinsic.String.Mid(V.Local.sBatchno,2,V.Local.sBatchno)
				
				f.Intrinsic.String.Build("{0}{1},{2},{3},{4},{5},",v.Local.sExportHdr,V.Local.sCust,V.Local.sPurAmt,V.Local.sBatchno,V.Local.sDocType,V.Local.sInvNo,V.Local.sExportHdr)
				'9/21/16 Dawn: changed sDate to sDocDate removed zeros and left empty
				f.Intrinsic.String.Build("{0}{1},{2},{3},{4},{5},{5},{5},{5},",V.Local.sExportHdr,V.Local.sDocText,V.Local.sDocDate,V.Local.sCost,V.Local.sFrtAMT,V.Local.sMiscAMT,V.Local.sExportHdr)
				
				f.Intrinsic.String.Build("{0}{1},{2},{3},{4},{5},",V.Local.sExportHdr,V.Local.sPaymentT,V.Local.sdate,V.Local.sInvNo,V.Local.sPayType,V.Local.sFacility,V.Local.sExportHdr)
				
'				f.Intrinsic.String.Build("{0}{1},{2},{3},{4}{5}",V.Local.sExportHdr,V.Local.sExchgCurr,V.Local.sCurrAMT,V.Local.sExchgRate,V.Local.sSalesRep,v.Ambient.NewLine ,v.Local.sExportHdr)
				f.Intrinsic.String.Build("{0}{1},{2},{3}{4}",V.Local.sExportHdr,V.Local.sExchgCurr,V.Local.sCurrAMT,V.Local.sExchgRate,v.Ambient.NewLine ,v.Local.sExportHdr)
				
				f.Intrinsic.String.Build("{0}{1}0000{0}",v.Ambient.DblQuote,v.ODBC.con!rst.FieldValTrim!GL_Account,V.Local.sGLAcctNo)
				
				'Detail file
				'9/22/16 Dawn: Removed extra comma added trim and removed , from last line in file
				f.Intrinsic.String.Build("{0}{1},7,{2},{3},{4},{5},{6}{7}",V.Local.sExportDet,V.Local.sGLAcctNo,V.Local.sPurAmt,V.Local.sInvNo,V.Local.sDocText,V.Local.sBatchno,V.Local.sFacility,v.Ambient.NewLine,V.Local.sExportDet)
				f.ODBC.con!rst1.Close
			f.Intrinsic.Control.EndIf 
			
			f.ODBC.con!rst.MoveNext 
		f.Intrinsic.Control.loop
		
		'build the filepath
	F.Intrinsic.String.build("{0}{1}",V.Caller.FilesDir,"\Great Plains\AR",V.Local.sfile)
	'see if the folder exists
	F.Intrinsic.File.Exists(V.Local.sfile,V.Local.bexists)
	'if the file doesn't exists create it
	F.Intrinsic.Control.If(V.Local.bexists,=,False)
		F.Intrinsic.File.CreateDir(V.Local.sfile)
	F.Intrinsic.Control.EndIf
	'set the date and format it
	Function.Intrinsic.String.Format (V.Ambient.Date ,"YYYYDDMM",V.Local.sdate)
	Function.Intrinsic.String.Format (V.Ambient.Time ,"HHNNSS",V.Local.sdate1)
	f.Intrinsic.String.Build("{0} {1}",V.Local.sdate,V.Local.sdate1,V.Local.sdate)
	'build the filename
	F.Intrinsic.String.Build("{0}_AR.csv",V.Local.sDate,V.Local.sfilename)
	'build the full path
	F.Intrinsic.String.Build("{0}\{1}",V.local.sfile,V.Local.sfilename,V.Local.sfullpath)
	F.Intrinsic.File.String2File(V.Local.sfullpath,V.Local.sExportHdr)

	F.Intrinsic.String.Build("{0}_ARDETAIL.csv",V.Local.sDate,V.Local.sfilename)
	F.Intrinsic.String.Build("{0}\{1}",V.local.sfile,V.Local.sfilename,V.Local.sfullpath)
	F.Intrinsic.File.String2File(V.Local.sfullpath,V.Local.sExportDet)
	Function.Intrinsic.Control.EndIf
	f.ODBC.con!rst.Close
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ExportAR_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4191_APARExport.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.ExportAR.End

Program.Sub.ExportAP.Start
F.Intrinsic.Control.SetErrorHandler("ExportAP_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)


V.Local.sSQL.Declare(String)
V.Local.sExportHdr.Declare(String)
V.Local.sExportDet.Declare(String)
V.Local.sBatchno.Declare(String)
V.Local.bexists.Declare(Boolean)
V.Local.sdate.Declare(String)
V.Local.sfilename.Declare(String)
V.Local.sfile.Declare(String)
V.Local.sfullpath.Declare(String)
V.Local.sdate1.Declare(String)
V.Local.sInvoiceNo.Declare(String)
V.Local.sPaymentT.Declare(String)

V.Local.sVendor.Declare(String)
V.Local.sDocNo.Declare(String)
V.Local.sPurAmt.Declare(String)
V.Local.sInvNo.Declare(String)
V.Local.sDocDate.Declare(String)
V.Local.sFrtAMT.Declare(String)
V.Local.sMiscAMT.Declare(String)
V.Local.sCurrAMT.Declare(String)
V.Local.sExchgCurr.Declare(String)
V.Local.sExchgRate.Declare(String)
V.Local.sGLAcctNo.Declare(String)
V.Local.sFacility.Declare(String)
V.Local.sPayType.Declare(String)
V.Local.sDocType.Declare(String)

	V.Local.sBatchno.Set(v.Args.Batch)
'	V.Local.sBatchno.Set("A0007")

'9/22/16 Dawn: Changed the sql to pull from view do date formatting is correct
'9/21/16 Dawn: Removed repeating select items from query
	V.Local.sSQL.Set("select distinct vendor,AMT_Invoice,batch_code,purchase_order,invoice,Date_Invoice,Exchange_Curr,GL_Account from V_AP_Open_Items")
	f.Intrinsic.String.Build(" {0} where Batch_NUM = '{1}'",V.Local.sSQL,V.Local.sBatchno,V.Local.sSQL)
	F.ODBC.Connection!con.OpenRecordsetRO("rst",V.local.ssql)
	F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,False)
		
		Function.Intrinsic.String.Format(v.ODBC.con!rst.FieldVal!Date_Invoice ,"MM/DD/YYYY",V.Local.sDocDate)
		f.Intrinsic.Control.DoUntil(v.ODBC.con!rst.EOF,=,true)
				'process only Invoices are different
			f.Intrinsic.Control.If(V.Local.sInvoiceNo,<>,v.ODBC.con!rst.FieldValtrim!invoice)
				V.Local.sInvoiceNo.Set(v.ODBC.con!rst.FieldValtrim!invoice)
				Function.Intrinsic.String.Format(v.ODBC.con!rst.FieldVal!Date_Invoice,"MM/DD/YYYY",V.Local.sdate)
				
				'calculate total 
				f.Intrinsic.String.Build("select sum(AMT_Invoice) as AMTINVOICE,sum(freight) as FRT,sum(Exchange_Amt) as ExChgAmt from AP_Open_Items where batch_num = '{0}' and invoice = '{1}'",V.Local.sBatchno,v.ODBC.con!rst.FieldValtrim!invoice,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRO("rst1",V.local.ssql)
	
				f.Intrinsic.Control.If(v.ODBC.con!rst.FieldVal!batch_code,=,"10")
					V.Local.sDocType.Set("1")
				f.Intrinsic.Control.ElseIf(v.ODBC.con!rst.FieldVal!batch_code,=,"09")
					V.Local.sDocType.Set("2")
				f.Intrinsic.Control.EndIf 
	

				f.Intrinsic.String.Build("select Terms_message from v_ap_terms join V_VENDOR_PAY_TO on terms_code = Payment_Terms where vendor = '{0}'",v.ODBC.con!rst.FieldValtrim!vendor,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRO("rst2",V.local.ssql)
				F.Intrinsic.Control.If(V.ODBC.con!rst2.EOF,=,False)
					V.Local.sPaymentT.Set(v.ODBC.con!rst2.FieldVal!Terms_message)
					f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,v.ODBC.con!rst2.FieldValtrim!Terms_message,V.Local.sPaymentT)
				f.Intrinsic.Control.EndIf 
				f.ODBC.con!rst2.Close
				

				f.Intrinsic.String.Build("select External_id from v_VENDOR_ADDL where vendor = '{0}'",v.ODBC.con!rst.FieldValtrim!vendor,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRO("rst3",V.local.ssql)
				F.Intrinsic.Control.If(V.ODBC.con!rst3.EOF,=,False)
					f.Intrinsic.String.Build("{0}VSA{1}{0}",v.Ambient.DblQuote,v.ODBC.con!rst3.FieldValtrim!External_id,V.Local.sVendor)
				f.Intrinsic.Control.EndIf 
				f.ODBC.con!rst3.Close

				'Hdr
'				f.Intrinsic.String.Build("{0}VSA{1}{0}",v.Ambient.DblQuote,v.ODBC.con!rst.FieldValtrim!vendor,V.Local.sVendor)
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,v.ODBC.con!rst1.FieldValTrim!AMTINVOICE,V.Local.sPurAmt)
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,v.ODBC.con!rst.FieldValtrim!purchase_order,V.Local.sDocNo)
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,v.ODBC.con!rst.FieldValtrim!invoice,V.Local.sInvNo)
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,v.ODBC.con!rst1.FieldValTrim!FRT,V.Local.sFrtAMT)
				f.Intrinsic.String.Build("{0}0{0}",v.Ambient.DblQuote,V.Local.sMiscAMT)
				f.Intrinsic.String.Build("{0}1{0}",v.Ambient.DblQuote,V.Local.sExchgRate)
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,v.ODBC.con!rst1.FieldValTrim!ExChgAmt,V.Local.sCurrAMT)
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,v.ODBC.con!rst.FieldValTrim!Exchange_Curr,V.Local.sExchgCurr)
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,V.Local.sdate,V.Local.sdate)
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,V.Local.sDocDate,V.Local.sDocDate)
				f.Intrinsic.String.Build("{0}{1}{0}",v.Ambient.DblQuote,"SUMMIT",V.Local.sFacility)
				
				
				'Remove 1st char
				f.Intrinsic.String.Mid(V.Local.sBatchno,2,V.Local.sBatchno)
				
				'v.ODBC.con!rst.FieldVal!Terms_Code
				f.Intrinsic.String.Build("{0}{1},{2},{3},{4},{5},{6},{7},",V.Local.sExportHdr,V.Local.sVendor,V.Local.sPurAmt,V.Local.sBatchno,V.Local.sDocType,V.Local.sDocNo,V.Local.sInvNo,V.Local.sInvNo,V.Local.sExportHdr)
				f.Intrinsic.String.Build("{0}{1},{2},{3},{3},{3},{3},",V.Local.sExportHdr,V.Local.sDocDate,V.Local.sFrtAMT,V.Local.sMiscAMT,V.Local.sExportHdr)
'				f.Intrinsic.String.Build("{0}{1},{2},0,0,0,0,",V.Local.sExportHdr,V.Local.sdate,V.Local.sFrtAMT,V.Local.sExportHdr)
				f.Intrinsic.String.Build("{0}{1},{2},{3},{4},",V.Local.sExportHdr,V.Local.sPaymentT,V.Local.sdate,V.Local.sFacility,V.Local.sInvNo,V.Local.sExportHdr)
				
				'9/23/16 Dawn: Trimed variables
				f.Intrinsic.String.Build("{0}{1},{2},{3}{4}",V.Local.sExportHdr,V.Local.sExchgCurr,V.Local.sCurrAMT,V.Local.sExchgRate,v.Ambient.NewLine ,v.Local.sExportHdr)
				
				'Details
				f.Intrinsic.String.Build("{0}{1}0000{0}",v.Ambient.DblQuote,v.ODBC.con!rst.FieldValTrim!GL_Account,V.Local.sGLAcctNo)
				
				'Detail file 9/23/16 Dawn: Trimed variables
'				f.Intrinsic.String.Build("{0}{1},{2},{3},{4},{5},{6},{7},{8}{9}",V.Local.sExportDet,v.ODBC.con!rst.FieldValTrim!GL_Account,v.ODBC.con!rst.FieldValTrim!batch_code,v.ODBC.con!rst1.FieldValTrim!AMTINVOICE,v.ODBC.con!rst.FieldValtrim!purchase_order,V.Local.sdate,V.Local.sBatchno,v.Caller.CompanyCode,v.ODBC.con!rst.FieldValtrim!invoice,v.Ambient.NewLine,V.Local.sExportDet)
				f.Intrinsic.String.Build("{0}{1},{2},{3},{4},{5},{6},{7},{8},{9},{10},{11}{12}",V.Local.sExportDet,V.Local.sGLAcctNo,V.Local.sDocType,V.Local.sPurAmt,V.Local.sDocNo,V.Local.sVendor,V.Local.sInvNo,V.Local.sDocNo,V.Local.sdate,V.Local.sBatchno,V.Local.sFacility,V.Local.sInvNo,v.Ambient.NewLine,V.Local.sExportDet)
				f.ODBC.con!rst1.Close
			f.Intrinsic.Control.EndIf 
			
			f.ODBC.con!rst.MoveNext 
		f.Intrinsic.Control.loop
		
		'build the filepath
	F.Intrinsic.String.build("{0}{1}",V.Caller.FilesDir,"\Great Plains\AP",V.Local.sfile)
	'see if the folder exists
	F.Intrinsic.File.Exists(V.Local.sfile,V.Local.bexists)
	'if the file doesn't exists create it
	F.Intrinsic.Control.If(V.Local.bexists,=,False)
		F.Intrinsic.File.CreateDir(V.Local.sfile)
	F.Intrinsic.Control.EndIf
	'set the date and format it
	
	Function.Intrinsic.String.Format (V.Ambient.Date,"YYYYDDMM",V.Local.sdate)
	Function.Intrinsic.String.Format (V.Ambient.Time,"HHNNSS",V.Local.sdate1)
	f.Intrinsic.String.Build("{0} {1}",V.Local.sdate,V.Local.sdate1,V.Local.sdate)
	'build the filename
	F.Intrinsic.String.Build("{0}_AP.csv",V.Local.sDate,V.Local.sfilename)
	'build the full path
	F.Intrinsic.String.Build("{0}\{1}",V.local.sfile,V.Local.sfilename,V.Local.sfullpath)
	F.Intrinsic.File.String2File(V.Local.sfullpath,V.Local.sExportHdr)

	F.Intrinsic.String.Build("{0}_APDETAIL.csv",V.Local.sDate,V.Local.sfilename)
	F.Intrinsic.String.Build("{0}\{1}",V.local.sfile,V.Local.sfilename,V.Local.sfullpath)
	F.Intrinsic.File.String2File(V.Local.sfullpath,V.Local.sExportDet)
	Function.Intrinsic.Control.EndIf
	f.ODBC.con!rst.Close

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ExportAP_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4191_APARExport.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.ExportAP.End

Program.Sub.ExportGL.Start
F.Intrinsic.Control.SetErrorHandler("ExportGL_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)


V.Local.ssql.Declare(String)
V.Local.sGL.Declare(String)
V.Local.sfile.Declare(String)
V.Local.bexists.Declare(Boolean)
V.Local.sdate.Declare(String)
V.Local.sdate1.Declare(String)
V.Local.sfilename.Declare(String)
V.Local.sfullpath.Declare(String)
V.Local.sExportGL.Declare(String)
V.Local.sAmtGL.Declare(String)

'9/23/16 Dawn
'F.Intrinsic.String.Build("Select GL_ACCOUNT,AMOUNT,POST_DATE From V_GL_DETAIL Where BATCH_NUM = '{0}'", V.Args.Batch, V.Local.ssql)
F.Intrinsic.String.Build("Select Account,P_Date,DR_Amount,CR_Amount From v_GL_JRNL_ENTRY Where BATCH = '{0}'", V.Args.Batch, V.Local.ssql)
F.ODBC.Connection!con.OpenRecordsetRO("rst", V.Local.ssql)	
'build file	
F.Intrinsic.Control.DoUntil(V.ODBC.con!rst.EOF,=,true)
	
	f.Intrinsic.Control.If(V.ODBC.con!rst.FieldVal!DR_Amount,<>,0)
		V.Local.sAmtGL.Set(V.ODBC.con!rst.FieldVal!DR_Amount)
	f.Intrinsic.Control.elseIf(V.ODBC.con!rst.FieldVal!CR_Amount,<>,0)
		f.Intrinsic.String.Build("-{0}",V.ODBC.con!rst.FieldVal!CR_Amount,V.Local.sAmtGL)
	f.Intrinsic.Control.EndIf 
	
	F.Intrinsic.String.Build("{0} 19,{1},19,{2},INVENTORY ADJUSTMENT,GL,{3},{4},{5}{6}", V.Local.sGL,V.ODBC.con!rst.FieldValtrim!Account,V.Local.sAmtGL,V.ODBC.con!rst.FieldValtrim!P_Date,V.Args.Batch,V.Caller.CompanyCode,v.Ambient.NewLine,V.Local.sGL)
	F.ODBC.con!rst.MoveNext 
F.Intrinsic.Control.loop
F.ODBC.con!rst.Close

'build the filepath
F.Intrinsic.String.build("{0}{1}",V.Caller.FilesDir,"\Great Plains\GL",V.Local.sfile)
'see if the folder exists
F.Intrinsic.File.Exists(V.Local.sfile,V.Local.bexists)
'if the file doesn't exists create it
F.Intrinsic.Control.If(V.Local.bexists,=,False)
	F.Intrinsic.File.CreateDir(V.Local.sfile)
F.Intrinsic.Control.EndIf
	
'set the date and format it
Function.Intrinsic.String.Format (V.Ambient.Date,"YYYYDDMM",V.Local.sdate)
Function.Intrinsic.String.Format (V.Ambient.Time,"HHNNSS",V.Local.sdate1)
F.Intrinsic.String.Build("{0} {1}",V.Local.sdate,V.Local.sdate1,V.Local.sdate)	
	
'build the filename
F.Intrinsic.String.Build("{0}_GL.csv",V.Local.sDate,V.Local.sfilename)
'build the full path
F.Intrinsic.String.Build("{0}\{1}",V.local.sfile,V.Local.sfilename,V.Local.sfullpath)
F.Intrinsic.File.String2File(V.Local.sfullpath,V.Local.sGL)	




F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ExportGL_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4191_APARExport.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	Function.Intrinsic.Control.End

Function.Intrinsic.Control.EndIf


Program.Sub.ExportGL.End

Program.Sub.Comments.Start
${$0$}$GCG_4191_APARExport.g2u$}$RAN$}$9/15/2016 2:51:43 PM$}$False
Program.Sub.Comments.End